{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shift","image","props","images","maxShift","translateNext","itemWidth","step","shiftNext","currentMaxShift","length","frameSize","setState","infinity","translatePrev","shiftPrev","this","animationDuration","className","type","onClick","disabled","style","width","transform","transition","map","index","src","alt","toString","height","Component","App","onSubmit","event","preventDefault","name","value","onChange","target","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76e3d281.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { CarouselState } from '../types/CarouselState';\n\nimport './Carousel.scss';\n\ntype Props = CarouselState;\n\ntype State = {\n  shift: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    shift: 0,\n  };\n\n  image = this.props.images;\n\n  maxShift = 1;\n\n  translateNext = () => {\n    const { itemWidth, step } = this.props;\n    const { shift } = this.state;\n    const shiftNext = itemWidth * step + shift;\n\n    const currentMaxShift = itemWidth * this.image.length\n    - step * itemWidth\n    + ((step - this.props.frameSize) * itemWidth);\n\n    this.setState({\n      shift: shiftNext > currentMaxShift ? currentMaxShift : shiftNext,\n    });\n    this.maxShift = currentMaxShift;\n\n    if (this.props.infinity) {\n      if (shiftNext > currentMaxShift && shift !== currentMaxShift) {\n        this.setState({\n          shift: currentMaxShift,\n        });\n      } else if (shift === currentMaxShift) {\n        this.setState({\n          shift: 0,\n        });\n      } else {\n        this.setState({\n          shift: shiftNext,\n        });\n      }\n    }\n  };\n\n  translatePrev = () => {\n    const { itemWidth, step } = this.props;\n    const { shift } = this.state;\n    const shiftPrev = shift - itemWidth * step;\n\n    const currentMaxShift = itemWidth * this.image.length\n    - step * itemWidth\n    + ((step - this.props.frameSize) * itemWidth);\n\n    this.setState({\n      shift: shiftPrev > 0 ? shiftPrev : 0,\n    });\n\n    if (this.props.infinity) {\n      if (shiftPrev > 0 && shift !== 0) {\n        this.setState({\n          shift: shiftPrev,\n        });\n      } else if (shift === 0) {\n        this.setState({\n          shift: currentMaxShift,\n        });\n      } else {\n        this.setState({\n          shift: 0,\n        });\n      }\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n    const { shift } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button Carousel__button--prev\"\n          onClick={() => {\n            this.translatePrev();\n          }}\n          disabled={(shift === 0 && !this.props.infinity)\n            || frameSize === images.length}\n        >\n          {' '}\n        </button>\n        <ul className=\"Carousel__list\" style={{ width: `${frameSize * itemWidth}px` }}>\n          <div className=\"Carousel__container\" style={{ transform: `translateX(-${shift}px)`, transition: `transform ${animationDuration / 1000}s` }}>\n            {images.map((image, index) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={index.toString()}\n                  className=\"Carousel__image\"\n                  style={{ width: itemWidth, height: itemWidth }}\n                />\n              </li>\n            ))}\n          </div>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"Carousel__button Carousel__button--next\"\n          data-cy=\"next\"\n          onClick={() => {\n            this.translateNext();\n          }}\n          disabled={(shift === this.maxShift && !this.props.infinity)\n            || frameSize === images.length}\n        >\n          {' '}\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './styles/App.scss';\nimport { Carousel } from './components/Carousel';\nimport { CarouselState } from './types/CarouselState';\n\ntype State = CarouselState;\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className='App__title' data-cy='title'>Carousel with {images.length} images</h1>\n        <form\n          className=\"App__form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <label>\n            Item width:\n            <input\n              name=\"itemWidth\"\n              type=\"number\"\n              value={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Frame Size:\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: +event.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Step:\n            <input\n              name=\"step\"\n              type=\"number\"\n              value={step}\n              onChange={(event) => {\n                this.setState({ step: +event.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Animation duration:\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({ animationDuration: +event.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Infinity:\n            <input\n              name=\"infinit\"\n              type=\"checkbox\"\n              checked={infinity}\n              onChange={(event) => {\n                this.setState({ infinity: event.target.checked });\n              }}\n            />\n          </label>\n\n        </form>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}